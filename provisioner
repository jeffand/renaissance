#!/usr/bin/env python
import tortilla,requests,json,getpass,sys,csv,re,jinja2
from requests.packages.urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

data = dict()
templateVars = {}

templateLoader = jinja2.FileSystemLoader( searchpath="/")
templateEnv = jinja2.Environment( loader=templateLoader )
TEMPLATE_FILE = "/Users/i859874/src/renaissance/src/dhcp-entry.j2"
template = templateEnv.get_template( TEMPLATE_FILE )

#headers = {'content-type': 'application/json'}


updateURL = 'https://yourdevice42address/api/ip/'

with open('hostbuild.csv', mode='r') as infile:
    reader = csv.reader(infile)
    for row in reader:
        hostname, mac_address, subnet = row[0], row[1], row[2]
        url = "https://yourdevice42address/api/1.0/suggest_ip/"

        payload = "subnet=" + row[2] + "%2F24&reserve_ip=yes"
        headers = {
            'accept': "text/plain",
            'cache-control': "no-cache",
            'postman-token': "29ad1953-8616-449b-925e-40f881e838e2",
            'content-type': "application/x-www-form-urlencoded"
            }

        #r = requests.request("POST", url, data=payload, headers=headers, verify=False,auth=('admin','adm!nd42'))
        r = requests.post(url, data=payload, headers=headers, verify=False,auth=('admin','adm!nd42'))
        data = r.text
        ip = str(re.findall( r'[0-9]+(?:\.[0-9]+){3}', r.content )[0])
        updatePayload = "ipaddress=" + str(ip) + "&label=" + row[0]
        #print updatePayload
        rr = requests.post(updateURL, data=updatePayload, headers=headers, verify=False,auth=('admin','adm!nd42'))
        #if rr.status_code == 200:
        #    print "Database label updated for " + row[0] + " assigned IP " + ip
        #else:
        #    print "Return code is " + rr.status_code
        short_hostname = hostname.split('.')[0]
        templateVars['host_name'] = short_hostname
        templateVars['mac_address'] = mac_address
        templateVars['ip'] = ip
        outputText = template.render( templateVars )
        print outputText
